#!/usr/bin/env python3

import glob
import json
import os
import sys
import time
import zipfile

import requests

ROOT_DIR = ".."
DIST_DIR = "dist"
OWNER = "kitao"
REPO = "pyxel"
WORKFLOW = "build-wasm.yml"
GITHUB_TOKEN = os.environ.get("GITHUB_TOKEN")

def build_wasm_wheel():
    if len(sys.argv) < 2:
        print("build_wasm_wheel branch")
        sys.exit(1)
    os.chdir(os.path.join(os.path.dirname(os.path.abspath(__file__)), ROOT_DIR))

    # Trigger workflow
    url = f"https://api.github.com/repos/{OWNER}/{REPO}/actions/workflows/{WORKFLOW}/dispatches"
    branch = sys.argv[1]
    headers = {
        "Accept": "application/vnd.github+json",
        "Authorization": f"Bearer {GITHUB_TOKEN}",
    }
    data = '{ "ref": "' + branch + '" }'
    response = requests.post(url, headers=headers, data=data)
    if response.status_code != 204:
        print("Failed to trigger workflow")
        sys.exit(1)

    # Wait for workflow completion
    while True:
        response = requests.get(
            f"https://api.github.com/repos/{OWNER}/{REPO}/actions/runs",
            headers=headers,
            # params={"workflow_file": WORKFLOW, "branch": branch},
        )
        data = response.json()
        running_workflows = [run for run in data["workflow_runs"] if run["head_branch"] == branch and run["status"] != "completed"]
        if not running_workflows:
                break
        time.sleep(10)

    # Download artifact
    if True:
        os.makedirs(DIST_DIR, exist_ok=True)
        for file in glob.glob(f"{DIST_DIR}/*-emscripten_*.whl"):
            os.remove(file)
        artifacts_url = run["artifacts_url"]
        response = requests.get(artifacts_url, headers=headers)
        artifacts_data = response.json()
        for artifact in artifacts_data["artifacts"]:
            artifact_name = artifact["name"]
            download_url = artifact["archive_download_url"]
            download_response = requests.get(download_url, headers=headers)
            zip_file_path = f"{DIST_DIR}/{artifact_name}.zip"
            with open(zip_file_path, "wb") as f:
                f.write(download_response.content)
            with zipfile.ZipFile(zip_file_path, "r") as zip_ref:
                zip_ref.extractall(f"{DIST_DIR}/")
            os.remove(zip_file_path)
    else:
        print("Workflow failed")
        sys.exit(1)

if __name__ == "__main__":
    build_wasm_wheel()
